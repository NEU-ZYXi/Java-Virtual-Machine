
1. 概述
  虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、转换解析和初始化，最终行程可以被虚拟机直接使用的Java类型，这是虚拟机的类加载机制
  类型的加载和连接过程是在程序运行期间完成的，为程序提供高度的灵活性，Java的动态扩展特性依赖运行期动态加载和动态连接实现
  
2. 类加载的时机
  类的生命周期：加载Loading、验证Verification、准备Preparation、解析Resolution、初始化Initialization、使用Using和卸载Unloading，其中验证、准备和解析称为连接Linking
  有且只有四种情况对类进行初始化，称为对一个类的主动引用
  1. 遇到new、getstatic、putstatis或invokestatic
  2. 对类进行发射调用时
  3. 当初始化一个类时，如果其父类为进行过初始化，需要先触发其父类的初始化
  4. 当虚拟机启动时，需要指定一个可执行的main class，虚拟机会先初始化这个主类
                        
3. 类加载的过程
  1. 加载Loading
    虚拟机需要完成通过一个类的全限定名来获取定义此类的二进制字节流、将这个字节流所代表的静态存储结构转化为方法区的运行时数据结构、在Heap中生成一个该类的对象作为方法区数据的访问入口
  2. 



