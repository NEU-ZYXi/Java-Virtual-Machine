
1. 概述
  Java虚拟机规定了虚拟机字节码执行引擎的概念模型，是各种虚拟机执行引擎的统一外观Facade
  执行引擎分为通过解释器执行的解释执行和通过即时编译器产生本地代码执行的编译执行
  Java虚拟机的执行引擎的外观：输入的是字节码文件，处理过程是字节码解析的等效过程，输出的是执行结果
  
2. 运行时栈帧结构
  栈帧Stack Frame是用于支持虚拟机进行方法调用和方法执行的数据结构，是虚拟机运行时数据区中的VM Stack的栈元素
  栈帧存储方法的局部变量表Local Variable Table、操作数栈Operand Stack、动态连接Dynamic Linking和方法返回地址Return Address，内存分配在编译器已经确定
  每一个方法从调用开始到执行完成的过程，对应着一个栈帧在VM Stack中从入栈到出栈的过程
  如果方法调用链很长，只有栈顶的栈帧是有效的，称为当前栈帧Current Stack Frame，这个栈帧所关联的方法称为当前方法Current Method，字节码只针对当前栈帧进行操作
  1. 局部变量表
    是一组变量值存储空间，用于存放方法参数和方法内部定义的局部变量
    局部变量表的容量以变量槽Variable Slot为最小单位，一个Slot可以存放32以内的数据类型
    在方法执行时，虚拟机是使用局部变量表完成参数值到参数变量列表的传递过程，对于实例方法，第0位索引的Slot存放方法所属对象实例的引用即可以用this访问该参数
    局部变量表中的Slot是可重用的，如果当前字节码PC计数器的值已经超过了某个变量的作用域，则该Slot可以被其他变量使用，节省栈空间，影响垃圾收集行为
    局部变量不存在类变量加载过程中的准备Preparation，因此局部变量不会被初始化零值，定义时需要赋初始值
  2. 操作数栈
    





