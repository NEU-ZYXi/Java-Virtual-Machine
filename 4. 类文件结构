
1. 实现无关性
  实现语言和平台无关性的基础是虚拟机和字节码ByteCode存储格式

2. Class类文件的结构
  Class文件是一组以8位字节Byte为基础单位的二进制流，各个数据之间没有添加任何分隔符
  Class文件格式采用类似于C语言结构体的伪结构来存储，只有两种数据类型，无符号数和表
  无符号数是基本数据类型，用来描述数字、索引引用、数量值和UTF-8编码的字符串
  表是由多个无符号数或其他表作为数据项构成的复合数据类型，以_info结尾，用于描述有层次关系的复合结构的数据
  
  1. 魔数Magic Number和Class文件版本
    1. 每个Class文件的头4个字节称为魔数Magic Number，用于确定这个文件是否为一个能被虚拟机接受的Class文件
       使用魔数而不是扩展名来进行识别基于安全考虑，因为文件扩展名可以被随意改动
    2. 之后的4个字节存储Class文件的版本号
  2. 常量池Constant Pool
    版本后之后为常量池入口，常量池是Class文件中第一个出现的表类型数据项目，入口有一个u2类型数据代表容量计数值constant_pool_count
    存放两大类常量：字面量Literal和符号引用Symbolic References
    字面量类似于Java常量概念，符号引用包括类和接口的全限定名Fully Qualified Name、字段名称和描述符Descriptor、方法名称和描述符
    每一项常量都是一个表，表第一位是一个代表常量类型的标志位
  3. 访问标志
    之后的2个字节代表访问标志access_flags，用于识别一些类或接口层次的访问信息
  4. 类索引、父类索引与接口索引集合
    类索引this_class确定这个类的全限定名，父类索引super_class确定这个类的父类的全限定名，接口索引集合interfaces描述这个类实现哪些接口
  5. 字段表集合
    字段表field_info用于描述接口或类中声明的变量
    字段field包括类级变量或实例级变量，但不包括在方法内部声明的变量
  6. 方法表集合
    存储对方法的描述，包括access_flags、name_index、descriptor_index、attributes



